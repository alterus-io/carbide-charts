---
# Rancher
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rancher-offline-docs
  namespace: {{ .Release.Namespace }}
  labels:
    app: rancher-offline-docs
spec:
  selector:
    matchLabels:
      app: rancher-offline-docs
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rancher-offline-docs
    spec:
      containers:
        - name: rancher-offline-docs
          image: {{ template "system_default_registry" . }}{{ .Values.images.comingsoon.name }}:{{ .Values.images.comingsoon.tag }}
          # image: {{ template "system_default_registry" . }}{{ .Values.images.rancher.name }}:{{ .Values.images.rancher.tag }}
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
---
# longhorn
apiVersion: apps/v1
kind: Deployment
metadata:
  name: longhorn-offline-docs
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: longhorn-offline-docs
spec:
  selector:
    matchLabels:
      app: longhorn-offline-docs
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: longhorn-offline-docs
    spec:
      containers:
        - name: longhorn-offline-docs
          imagePullPolicy: Always
          image: {{ template "system_default_registry" . }}{{ .Values.images.longhorn.name }}:{{ .Values.images.longhorn.tag }}
          ports:
            - name: http
              containerPort: 80

---
# elemental
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elemental-offline-docs
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: elemental-offline-docs
spec:
  selector:
    matchLabels:
      app: elemental-offline-docs
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: elemental-offline-docs
    spec:
      containers:
        - name: elemental-offline-docs
          imagePullPolicy: Always
          # image: {{ template "system_default_registry" . }}{{ .Values.images.elemental.name }}:{{ .Values.images.elemental.tag }}
          image: {{ template "system_default_registry" . }}{{ .Values.images.comingsoon.name }}:{{ .Values.images.comingsoon.tag }}
          ports:
            - name: http
              containerPort: 80
---
# harvester
apiVersion: apps/v1
kind: Deployment
metadata:
  name: harvester-offline-docs
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: harvester-offline-docs
spec:
  selector:
    matchLabels:
      app: harvester-offline-docs
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: harvester-offline-docs
    spec:
      containers:
        - name: harvester-offline-docs
          imagePullPolicy: Always
          # image: {{ template "system_default_registry" . }}{{ .Values.images.harvester.name }}:{{ .Values.images.harvester.tag }}
          image: {{ template "system_default_registry" . }}{{ .Values.images.comingsoon.name }}:{{ .Values.images.comingsoon.tag }}
          ports:
            - name: http
              containerPort: 80
---
# hauler
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hauler-offline-docs
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: hauler-offline-docs
spec:
  selector:
    matchLabels:
      app: hauler-offline-docs
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: hauler-offline-docs
    spec:
      containers:
        - name: hauler-offline-docs
          imagePullPolicy: Always
          # image: {{ template "system_default_registry" . }}{{ .Values.images.hauler.name }}:{{ .Values.images.hauler.tag }}
          image: {{ template "system_default_registry" . }}{{ .Values.images.comingsoon.name }}:{{ .Values.images.comingsoon.tag }}
          ports:
            - name: http
              containerPort: 80
---
# rke2
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rke2-offline-docs
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: rke2-offline-docs
spec:
  selector:
    matchLabels:
      app: rke2-offline-docs
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rke2-offline-docs
    spec:
      containers:
        - name: rke2-offline-docs
          imagePullPolicy: Always
          image: {{ template "system_default_registry" . }}{{ .Values.images.rke2.name }}:{{ .Values.images.rke2.tag }}
          ports:
            - name: http
              containerPort: 80

---
# k3s
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k3s-offline-docs
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: k3s-offline-docs
spec:
  selector:
    matchLabels:
      app: k3s-offline-docs
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: k3s-offline-docs
    spec:
      containers:
        - name: k3s-offline-docs
          imagePullPolicy: Always
          image: {{ template "system_default_registry" . }}{{ .Values.images.k3s.name }}:{{ .Values.images.k3s.tag }}
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80

---
# carbide
apiVersion: apps/v1
kind: Deployment
metadata:
  name: carbide-offline-docs
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: carbide-offline-docs
spec:
  selector:
    matchLabels:
      app: carbide-offline-docs
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: carbide-offline-docs
    spec:
      containers:
        - name: carbide-offline-docs
          imagePullPolicy: Always
          image: {{ template "system_default_registry" . }}{{ .Values.images.comingsoon.name }}:{{ .Values.images.comingsoon.tag }}
          # image: {{ template "system_default_registry" . }}{{ .Values.images.carbide.name }}:{{ .Values.images.carbide.tag }}
          ports:
            - name: http
              containerPort: 80

---
# kubewarden
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubewarden-offline-docs
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: kubewarden-offline-docs
spec:
  selector:
    matchLabels:
      app: kubewarden-offline-docs
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kubewarden-offline-docs
    spec:
      containers:
        - name: kubewarden-offline-docs
          imagePullPolicy: Always
          image: {{ template "system_default_registry" . }}{{ .Values.images.kubewarden.name }}:{{ .Values.images.kubewarden.tag }}
          ports:
            - name: http
              containerPort: 80

---
# fleet
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fleet-offline-docs
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: fleet-offline-docs
spec:
  selector:
    matchLabels:
      app: fleet-offline-docs
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: fleet-offline-docs
    spec:
      containers:
        - name: fleet-offline-docs
          imagePullPolicy: Always
          image: {{ template "system_default_registry" . }}{{ .Values.images.fleet.name }}:{{ .Values.images.fleet.tag }}
          ports:
            - name: http
              containerPort: 80

---
# neuvector
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neuvector-offline-docs
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: neuvector-offline-docs
spec:
  selector:
    matchLabels:
      app: neuvector-offline-docs
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: neuvector-offline-docs
    spec:
      containers:
        - name: neuvector-offline-docs
          imagePullPolicy: Always
          # image: {{ template "system_default_registry" . }}{{ .Values.images.neuvector.name }}:{{ .Values.images.neuvector.tag }}
          image: {{ template "system_default_registry" . }}{{ .Values.images.comingsoon.name }}:{{ .Values.images.comingsoon.tag }}
          ports:
            - name: http
              containerPort: 80

